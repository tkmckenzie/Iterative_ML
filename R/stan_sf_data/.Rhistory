system("g++ -v")
cat('Sys.setenv(BINPREF = "C:/Rtools/mingw_$(WIN)/bin/")',
file = file.path(Sys.getenv("HOME"), ".Rprofile"),
sep = "\n", append = TRUE)
source('~/git/Iterative_ML/R/stan_sf_data/gp_sf_fit.R', echo=TRUE)
##############################
#Likelihood evaluation
N = nrow(X)
log.lik.func = function(epsilon, sigma.u, sigma.v){
sigma.sq = sigma.u^2 + sigma.v^2
sigma = sqrt(sigma.sq)
lambda = sigma.u / sigma.v
return(length(epsilon) * (log(2) - log(sigma)) + dnorm(epsilon / sigma, log = TRUE) + pnorm(epsilon * lambda / sigma, log = TRUE, lower.tail = FALSE))
}
normal.kernel = function(x, alpha, H.inv){
return(alpha^2 * exp(-0.5 * t(x) %*% H.inv %*% x))
}
normal.cov = function(alpha, H.inv){
result = matrix(NA, nrow = N, ncol = N)
for (i in 1:(N - 1)){
result[i, i] = alpha^2
for (j in (i + 1):N){
temp.result = normal.kernel(X[i,] - X[j,], alpha, H.inv)
result[i, j] = temp.result
result[j, i] = temp.result
}
}
result[N, N] = alpha^2
return(result)
}
sigma.u.restricted = mean(stan.extract$sigma_u)
sigma.v.restricted = mean(stan.extract$sigma_v)
H.inv.diag.restricted = apply(stan.extract$H_inv_diag, 2, mean)
alpha.restricted = mean(stan.extract$alpha)
eta.restricted = apply(stan.extract$eta, 2, mean)
cov = normal.cov(alpha.restricted, diag(H.inv.diag.restricted))
L = t(chol(cov))
f = L %*% eta.restricted
epsilon = c(y - f)
log.lik = sum(sapply(epsilon, log.lik.func, sigma.u = sigma.u.restricted, sigma.v = sigma.v.restricted))
log.lik
stan.extract$f
dim(stan.extract$f)
apply(stan.extract$f, 2, mean)
f
apply(stan.extract$f, 2, mean) - f
i = 1
sigma.u.restricted = stan.extract$sigma_u[i]
dim(stan.extract$H_inv_diag)
sigma.v.restricted = stan.extract$sigma_v[i]
H.inv.diag.restricted = stan.extract$H_inv_diag[i,]
alpha.restricted = stan.extract$alpha[i]
eta.restricted = stan.extract$eta[i,]
cov = normal.cov(alpha.restricted, diag(H.inv.diag.restricted))
L = t(chol(cov))
f = L %*% eta.restricted
stan.extract$f[1,]
f
stan.extract$f[1,] - f
i = 500
sigma.u.restricted = stan.extract$sigma_u[i]
sigma.v.restricted = stan.extract$sigma_v[i]
H.inv.diag.restricted = stan.extract$H_inv_diag[i,]
alpha.restricted = stan.extract$alpha[i]
eta.restricted = stan.extract$eta[i,]
cov = normal.cov(alpha.restricted, diag(H.inv.diag.restricted))
L = t(chol(cov))
f = L %*% eta.restricted
stan.extract$f[i,] - f
source('~/git/Iterative_ML/R/stan_sf_data/gp_sf_fit.R', echo=TRUE)
source('~/git/Iterative_ML/R/stan_sf_data/gp_sf_fit.R', echo=TRUE)
#Trace plot:
traceplot(stan.fit)
apply(stan.extract$H_inv_diag, 2, meanb)
apply(stan.extract$H_inv_diag, 2, mean)
